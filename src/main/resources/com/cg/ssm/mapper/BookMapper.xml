<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cg.ssm.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="com.cg.ssm.pojo.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="sales" property="sales" jdbcType="INTEGER" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="img_path" property="imgPath" jdbcType="VARCHAR" />
    <result column="fid" property="fid" jdbcType="INTEGER" />
  </resultMap>

  <!--  ====================自己写的（上边界）=========================-->
  <resultMap id="BaseResultMap2" type="com.cg.ssm.pojo.Book" >
    <id column="bid" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="sales" property="sales" jdbcType="INTEGER" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="img_path" property="imgPath" jdbcType="VARCHAR" />
    <!--        可以级联赋值,可通过  属性(对象).属性  赋值-->
<!--    <result column="fid" property="factory.id"></result>-->
<!--    <result column="fname" property="factory.fname"></result>-->
    <association property="factory" javaType="bookFactory">
<!--      property中填bookFactory中的属性-->
      <id column="fid" property="id"></id>
      <result column="fname" property="fname"></result>
    </association>
  </resultMap>
  <!--  ====================自己写的(下边界)=========================-->
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, price, author, sales, stock, img_path, fid
  </sql>
<!--  ====================自己写的查询(上边界)=========================-->
  <select id="selectAllBookAndFac" resultMap="BaseResultMap2">
    select b.id bid,name,price,author,sales,f.id fid,fname from t_book b JOIN t_factory f on
      b.fid=f.id ORDER BY bid
  </select>
  <select id="selectBookAndFactoryId" resultMap="BaseResultMap2">
    select b.id bid,name,price,author,sales,f.id fid,fname from t_book b JOIN t_factory f on
      b.fid=f.id and b.id=#{id} ORDER BY bid
  </select>
  <!--  ====================自己写的查询（下边界）=========================-->
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cg.ssm.pojo.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cg.ssm.pojo.BookExample" >
    delete from t_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cg.ssm.pojo.Book" >
    insert into t_book (id, name, price, 
      author, sales, stock, 
      img_path, fid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{author,jdbcType=VARCHAR}, #{sales,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, 
      #{imgPath,jdbcType=VARCHAR}, #{fid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cg.ssm.pojo.Book" >
    insert into t_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="sales != null" >
        sales,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="imgPath != null" >
        img_path,
      </if>
      <if test="fid != null" >
        fid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="sales != null" >
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="imgPath != null" >
        #{imgPath,jdbcType=VARCHAR},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cg.ssm.pojo.BookExample" resultType="java.lang.Integer" >
    select count(*) from t_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_book
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.sales != null" >
        sales = #{record.sales,jdbcType=INTEGER},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.imgPath != null" >
        img_path = #{record.imgPath,jdbcType=VARCHAR},
      </if>
      <if test="record.fid != null" >
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_book
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      author = #{record.author,jdbcType=VARCHAR},
      sales = #{record.sales,jdbcType=INTEGER},
      stock = #{record.stock,jdbcType=INTEGER},
      img_path = #{record.imgPath,jdbcType=VARCHAR},
      fid = #{record.fid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cg.ssm.pojo.Book" >
    update t_book
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="sales != null" >
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="imgPath != null" >
        img_path = #{imgPath,jdbcType=VARCHAR},
      </if>
      <if test="fid != null" >
        fid = #{fid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cg.ssm.pojo.Book" >
    update t_book
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      author = #{author,jdbcType=VARCHAR},
      sales = #{sales,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      img_path = #{imgPath,jdbcType=VARCHAR},
      fid = #{fid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>